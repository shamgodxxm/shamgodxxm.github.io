<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>初尝51单片机</title>
    <url>/2020/05/05/%E5%88%9D%E5%B0%9D51%E5%8D%95%E7%89%87%E6%9C%BA/</url>
    <content><![CDATA[<p>nothing</p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>单片机</tag>
      </tags>
  </entry>
  <entry>
    <title>算法重游记</title>
    <url>/2020/05/07/%E7%AE%97%E6%B3%95%E9%87%8D%E5%AD%A6%E8%AE%B0/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#十大算法">十大算法</a><ul>
<li><a href="#冒泡排序">冒泡排序</a></li>
</ul>
</li>
<li><a href="#试一试">试一试</a><ul>
<li><a href="#再试一试">再试一试</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->
<h2 id="十大算法"><a href="#十大算法" class="headerlink" title="十大算法"></a>十大算法</h2><p><a href="https://mp.weixin.qq.com/s/vn3KiV-ez79FmbZ36SX9lg" target="_blank" rel="noopener"><em>最old school的十大排序算法</em></a></p>
<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><h2 id="试一试"><a href="#试一试" class="headerlink" title="试一试"></a>试一试</h2><h3 id="再试一试"><a href="#再试一试" class="headerlink" title="再试一试"></a>再试一试</h3>]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>运动规划的碰撞检测</title>
    <url>/2020/05/14/%E8%BF%90%E5%8A%A8%E8%A7%84%E5%88%92%E7%9A%84%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B/</url>
    <content><![CDATA[<h2 id="2-4碰撞检测"><a href="#2-4碰撞检测" class="headerlink" title="2.4碰撞检测"></a>2.4碰撞检测</h2><p>  在轨道异物入侵的场景下，对动态异物的碰撞检测尤为重要。为了简化物体之间的碰撞检测运算，通常会对物体创建一个规则的几何外形将其包围。</p>
<p>  包围体是一个简单的几何空间，里面包含着复杂形状的物体。为物体添加包围体的目的是快速的进行碰撞检测或者进行精确的碰撞检测之前进行过滤。</p>
<p>  <img src="/.com//1_box.png" alt="球体 AABB OBB"></p>
<p>  1) AABB 包围盒: AABB 包围盒是与坐标轴对齐的包围盒, 简单性好, 紧密性较差(尤其对斜对角方向放置的瘦长形对象, 採用AABB, 将留下非常大的边角空隙, 导致大量不是必需的包围盒相交測试)。当物体旋转之后需对AABB 进行相同的旋转并更新; 当物体变形之后仅仅需对变形了的基本几何元素相应的包围盒又一次计算; 然后能够自下向上由子结点的AABB 合成父结点的AABB, 最后进行包围盒树的更新。</p>
<p>  2) OBB 包围盒: OBB 碰撞检測方法紧密性是较好的, 可以大大降低參与相交測试的包围盒的数目, 因此整体性能要优于AABB 和包围球, 而且实时性程度较高。当物体发生旋转运动后, 仅仅需对OBB 进行相同的旋转就可以。因此, 对于刚体间的碰撞检測, OBB 不失为一种较好的选择。迄今为止, 还没一种有效的方法可以较好地解决对象变形后OBB 树的更新问题, 而又一次计算每一个结点的OBB 的代价又太大。所以OBB 不适用于包括软体对象的复杂环境中。</p>
<p>  3) 包围球: 包围球碰撞检測方法是用球体包围整个几何体, 不管是几何体还是相交測试都非常easy; 可是它的紧密性太差。由于除了在3 个坐标轴上分布得比較均匀的几何体外, 差点儿都会留下较大的空隙, 须要花费大量的预处理时间, 以构造一个好的层次结构逼近对象。当物体变形之后,包围球树须要又一次计算。因此,它是使用得比較少的一种包围盒。当对象发生旋转运动时, 包围球不需作不论什么更新, 这是包围球的较优秀特性; 当几何对象进行频繁的旋转运动时, 採用包围球可能得到较好结果。</p>
<h2 id="2-4-1-Flexible-collision-library在本项目应用场景"><a href="#2-4-1-Flexible-collision-library在本项目应用场景" class="headerlink" title="2.4.1 Flexible collision library在本项目应用场景"></a>2.4.1 Flexible collision library在本项目应用场景</h2><h2 id="2-4-2-具体算法流程"><a href="#2-4-2-具体算法流程" class="headerlink" title="2.4.2 具体算法流程"></a>2.4.2 具体算法流程</h2><h2 id="2-4-3-轨道区域碰撞预测结果"><a href="#2-4-3-轨道区域碰撞预测结果" class="headerlink" title="2.4.3 轨道区域碰撞预测结果"></a>2.4.3 轨道区域碰撞预测结果</h2>]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
</search>
